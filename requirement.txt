## Level Database

1. Schema table  ====================> Done
2. Menggunakan Sequelize ==========> Done
3. Memiliki 1 entitas wajib yaitu Users ==================> Done
4. Terdapat column password untuk User ===================> Done
5. Memiliki minimal 3 entitas/table tambahan tergantung tema yang diambil ================> Done
6. Memiliki asosisasi 1-to-1 dan 1-to-Many ==================> Done
7. Membuat migrasi tambahan =================> Done

### Routes

1. Minimal terdapat 1 dynamic route params ==================> Done
2. Minimal terdapat 2 route get dan 1 route post =====================> Done

### Explore

1. Sistem login dengan Middleware, Session & Bcryptjs
2. Membuat MVP 
Menggunakan minimal 1 package tambahan yang dijadikan penambahan 
feature dalam web-app
3. Mendeploy pair project ke cloud environtment (pakai Heroku)

### Level Aplikasi

1. Menggunakan Fitur Search atau Sort
2. Validasi dari Sequelize 
3. Enkripsi dengan BcryptJs 
4. Hooks 
5. Static method pada Model (buatan sendiri)
6. Instance method pada Model atau getter (buatan sendiri)
7. Middleware & Session untuk sistem login
8. Helper 

### Pages

1. Landing Page (menggambarkan project)
2. Login Page dengan menggunakan form dengan email & password 
3. Halaman yang mengimplementasikan CRUD actions
4. Logout (tombol dan route)
5. Memiliki 1 halaman view yang menampilkan data gabungan dari >= 2 table